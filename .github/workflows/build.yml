
name: build-project

on:
  push:
    paths-ignore:
      - LICENSE
      - README.md
  pull_request:    
    paths-ignore:
      - LICENSE
      - README.md

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        sdk:
          - l4d2
          #- l4d
        os:
          - windows-latest
        #  - ubuntu-latest
    env:
      METAMOD: ${{ github.workspace }}/metamod
      SOURCEMOD: ${{ github.workspace }}/sourcemod
      SDK: ${{ github.workspace }}/gamesdk
      
    steps:
        - uses: actions/checkout@v2
          with:
            ref: 'dev-v2.7'
            path: actions-sdk
            
        - uses: actions/checkout@v2
          with:
            ref: '${{matrix.sdk}}-sdk'
            path: actions-sdk/actions-ext
            
        - name: Acquire SourceMod
          uses: actions/checkout@v2
          with:
              repository: alliedmodders/sourcemod
              submodules: recursive
              path: 'sourcemod'
          
        - name: Acquire MetaMod:Source
          uses: actions/checkout@v2
          with:
              repository: alliedmodders/metamod-source
              path: 'metamod'
        
        - name: Acquire SDK
          uses: actions/checkout@v2
          with:
              repository: alliedmodders/hl2sdk
              path: 'gamesdk'
              ref: '${{matrix.sdk}}'
          
        - name: Install Linux dependencies
          if: runner.os == 'Linux'
          run: |
            sudo dpkg --add-architecture i386
            sudo apt-get update
            sudo apt-get install -y --no-install-recommends \
            gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
            libc6-dev libc6-dev-i386 linux-libc-dev \
            linux-libc-dev:i386 lib32z1-dev
            
        - name: Create Build Directory
          run: cmake -E make_directory ${{github.workspace}}/build
          
        - name: Configure CMake (Windows)
          working-directory: actions-sdk
          if: runner.os == 'Windows'
          run: cmake -S . -B build -A Win32 --no-warn-unused-cli
              
        - name: Configure CMake (Linux)
          working-directory: actions-sdk
          if: runner.os == 'Linux'
          run: cmake -S . -B build --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang
              
        - name: Build (Windows)
          working-directory: actions-sdk
          if: runner.os == 'Windows'
          run: cmake --build build --config ${{env.BUILD_TYPE}} -j 6
           
        - name: Build (Linux)
          working-directory: actions-sdk
          if: runner.os == 'Linux'
          run: cmake --build build -j 6
          
        - name: Upload output files (Linux)
          if: runner.os == 'Linux'
          uses: actions/upload-artifact@v2
          with:
            name: release-linux
            path: ${{github.workspace}}/actions-sdk/build/*.so
            
        - name: Upload output files (Windows)
          if: runner.os == 'Windows'
          uses: actions/upload-artifact@v2
          with:
            name: release-windows
            path: ${{github.workspace}}/actions-sdk/build/Release/*.dll
  
